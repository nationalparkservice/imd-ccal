[{"path":"https://nationalparkservice.github.io/imd-ccal/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Sarah Wright. Author, maintainer. Liam Smith. Author.","code":""},{"path":"https://nationalparkservice.github.io/imd-ccal/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Wright S, Smith L (2025). imdccal: Wrangle CCAL Data Machine Readable Format. R package version 1.0.0, https://nationalparkservice.github.io/imd-ccal/.","code":"@Manual{,   title = {imdccal: Wrangle CCAL Data Into Machine Readable Format},   author = {Sarah Wright and Liam Smith},   year = {2025},   note = {R package version 1.0.0},   url = {https://nationalparkservice.github.io/imd-ccal/}, }"},{"path":[]},{"path":"https://nationalparkservice.github.io/imd-ccal/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Wrangle CCAL Data Into Machine Readable Format","text":"imdccal R Package designed help users work water chemistry lab deliverables Cooperative Chemical Analytical Laboratory (CCAL) Oregon State University. Functions read_ccal() format_equis_results() help users extract data .xlsx files provided CCAL, convert machine readable format, begin processing Environmental Quality Information Systems (EQuIS) Electronic Data Deliverable (EDD) format. package primarily geared towards data management Inventory & Monitoring Division (IMD) National Park Service, may useful users CCAL data. imdccal developed Sarah Wright Liam Smith maintained Sarah Wright. Please reach via Issues ideas improvement. Disclaimer: package best parse human-entered data. However, lab deliverables known vary across projects time. package never able predict every variation input data, although best update learn new edge cases. software, knowledgeable human ALWAYS verify outputs correct complete.","code":""},{"path":"https://nationalparkservice.github.io/imd-ccal/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Wrangle CCAL Data Into Machine Readable Format","text":"can install development version imdccal GitHub repository :","code":"# install.packages(\"remotes\") remotes::install_github(\"nationalparkservice/imd-ccal\")"},{"path":"https://nationalparkservice.github.io/imd-ccal/index.html","id":"example-data","dir":"","previous_headings":"","what":"Example Data","title":"Wrangle CCAL Data Into Machine Readable Format","text":"demonstrate functionality imdccal, created two fictitious CCAL deliverables downloaded package. story behind data 2099 NPS now Outer Space Network monitoring locations Moon, Mars, Mercury, Saturn. Users can find file paths example data running following code chunk. Since example data installed package, can run code ReadMe computer.","code":"use_example_data(file_names = use_example_data())"},{"path":"https://nationalparkservice.github.io/imd-ccal/index.html","id":"example-creating-machine-readable-ccal-data","dir":"","previous_headings":"","what":"Example: Creating Machine-Readable CCAL Data","title":"Wrangle CCAL Data Into Machine Readable Format","text":"Read tidy data work R, without writing data files. Write tidied data currently stored R environment file. Note destination_folder must already exist. Instead two step process creating tidied R object writing file, users may use read_write_ccal() function create write tidied data file one step. example reading data single file CCAL lab data writing machine-readable version Excel file set CSV files. functions also work supplied vector file paths multiple CCAL deliverables. example reading data multiple files CCAL lab data writing machine-readable version Excel files sets CSV files. default, functions create separate tables files CCAL deliverable supplied input. concatenate results together, set concat argument read_ccal() read_write_ccal() TRUE.","code":"# Load package library(imdccal)  # Create tidied CCAL data from demo data stored in the imdccal package tidy_ccal <- read_ccal(use_example_data(file_names = \"SPAC_080199.xlsx\")) # Get the data for a single set of lab results data <- tidy_ccal$`SPAC_080199.xlsx`$data      # Get the metadata for the same set of results meta <- tidy_ccal$`SPAC_080199.xlsx`$metadata # Write data stored in environment to file write_ccal(all_data = tidy_ccal,             format = \"xlsx\", # alternatively, \"csv\"            destination_folder = \"ccal_tidy\", # must already exist            overwrite = TRUE,            suffix = \"_tidy\",            num_tables = 4) # Write tidied CCAL data to file from demo data stored in imdccal package  # Write tidied data to a new .xlsx read_write_ccal(use_example_data(file_names = \"SPAC_080199.xlsx\"),                     destination_folder = \"ccal_tidy\")   # Write tidied data to a folder of CSV files read_write_ccal(use_example_data(file_names = \"SPAC_081599.xlsx\"),                      format = \"csv\", destination_folder = \"ccal_tidy\") # Get file paths all_files <- use_example_data(file_names = use_example_data())  # Write to xlsx # Write one file of tidied data per input file read_write_ccal(all_files, destination_folder = \"ccal_tidy\")    # Write to csv # Write one folder of tidied CSV data per input file read_write_ccal(all_files, format = \"csv\", destination_folder = \"ccal_tidy\") read_write_ccal(all_files, destination_folder = \"ccal_tidy\", concat = TRUE)"},{"path":"https://nationalparkservice.github.io/imd-ccal/index.html","id":"example-creating-the-results-table-of-the-equis-edd","dir":"","previous_headings":"","what":"Example: Creating the Results Table of the EQuIS EDD","title":"Wrangle CCAL Data Into Machine Readable Format","text":"addition converting CCAL lab deliverables machine readable format, imdccal also provides functionality begin processing machine readable data EQuIS EDD format. Specifically, format_equis_results() function begins format data Results table EDD. Uses: Process data one tables format accepted EQuIS Censor values less equal MDL Raise J-R flag observations greater MDL less equal LQL Limitations: Users still need create Activities table every deliverable Projects Locations tables require edits. Within Results table, users still need define Activity_ID, modify Result_Status (set Pre-Cert since additional QC needed), add flags, conduct rest QC processes demonstrate useage function. Read data, create Results table EDD, work R without writing data files: inspect table created , notice many columns without data result useful. ’s code relies table containing detection limits analyte. accommodate changes detection limits time, table includes StartDate EndDate columns. issue none limits applicable December 31, 2024, example data 2099. default, format_equis_results() uses version table stored within package. However, users may provide version table argument function better suits needs. may occur, example, detection limits change user needs include analyte yet table. provide different version table, start version stored package, add rows edit columns see fit. may helpful review documentation limits table (run ?imdccal::detection_limits) make edits. example, edit EndDate relevant rows December 31, 2099 code . Users may also save table csv xlsx file make changes directly spreadsheet. use one’s updated table format_equis_results(), simply supply function modified table (R object) limits argument. example data . Users may also provide version qualifiers table, contains lookup_code remark columns NPS_EQuIS_WQX_Reference_Values filtering rows #lookup_type “Result_Qualifier”. package flag raise “J-R”, unless flag’s description changes, user need use argument. However, worth familiarizing oneself table useful data processing. Run ?imdccal::equis_qualifiers see table’s documentation. addition, users may benefit reading NPS EQuIS Resources website, provides comprehensive guidelines formatting data EQuIS. Like machine readable data, can write results table R environment file write_ccal() function. Also manner machine readable data, instead two step process creating results table R object writing file, users may use write_equis_results() function create write results table file one step. example reading data single file CCAL lab data writing results table Excel CSV file. , functions work supplied vector file paths multiple CCAL deliverables. example reading data multiple files CCAL lab data writing results tables Excel CSV files. default, functions create separate tables files CCAL deliverable supplied input. concatenate results together, set concat argument format_equis_results() write_equis_results() TRUE.","code":"# Create results table from demo data stored in the imdccal package results_incomplete <- format_equis_results(   use_example_data(file_names = \"SPAC_080199.xlsx\")) # Edit limits table limits <- imdccal::detection_limits |>   dplyr::mutate(EndDate = dplyr::if_else(EndDate == \"2024-12-31\",                                           lubridate::ymd(\"2099-12-31\"),                                           EndDate)) # Create results table from demo data stored in the imdccal package results_complete <- format_equis_results(   use_example_data(file_names = \"SPAC_080199.xlsx\"),   limits = limits) # Write data stored in environment to file write_ccal(all_data = results_complete,             format = \"xlsx\", # alternatively, \"csv\"            destination_folder = \"ccal_tidy\", # must already exist            overwrite = TRUE,             suffix = \"_edd_results\",             num_tables = 1) # Write results table to xlsx from demo data stored in imdccal package write_equis_results(files = use_example_data(file_names = \"SPAC_080199.xlsx\"),               limits = limits,               format = \"xlsx\",               destination_folder = \"ccal_tidy\",               overwrite = TRUE)  # Write results table to csv from demo data stored in imdccal package write_equis_results(files = use_example_data(file_names = \"SPAC_081599.xlsx\"),               limits = limits,               format = \"csv\",               destination_folder = \"ccal_tidy\",               overwrite = TRUE) # Get file paths all_files <- use_example_data(file_names = use_example_data())  # Write to xlsx write_equis_results(files = all_files,                limits = limits,               destination_folder = \"ccal_tidy\",               overwrite = TRUE)  # Write to csv write_equis_results(files = all_files,                limits = limits,               format = \"csv\",                destination_folder = \"ccal_tidy\",               overwrite = TRUE) write_equis_results(files = all_files,                limits = limits,               destination_folder = \"ccal_tidy\",               overwrite = TRUE,               concat = TRUE)"},{"path":"https://nationalparkservice.github.io/imd-ccal/reference/assign_detection_flags.html","id":null,"dir":"Reference","previous_headings":"","what":"Assign quality control flags to values less than or equal to the minimum level of quantification but greater than the MDL. — assign_detection_flags","title":"Assign quality control flags to values less than or equal to the minimum level of quantification but greater than the MDL. — assign_detection_flags","text":"Assign quality control flags values less equal minimum level quantification greater MDL.","code":""},{"path":"https://nationalparkservice.github.io/imd-ccal/reference/assign_detection_flags.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assign quality control flags to values less than or equal to the minimum level of quantification but greater than the MDL. — assign_detection_flags","text":"","code":"assign_detection_flags(data, limits = imdccal::detection_limits)"},{"path":"https://nationalparkservice.github.io/imd-ccal/reference/assign_detection_flags.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assign quality control flags to values less than or equal to the minimum level of quantification but greater than the MDL. — assign_detection_flags","text":"data \"data\" table produced read_ccal() duplicates removed remove_ccal_duplicates(). limits Table detection limits. default, uses version package. User-defined versions must columns.","code":""},{"path":"https://nationalparkservice.github.io/imd-ccal/reference/assign_detection_flags.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assign quality control flags to values less than or equal to the minimum level of quantification but greater than the MDL. — assign_detection_flags","text":"input data addition new flag field. flag included routine J-R flag. flags need defined separately user.","code":""},{"path":"https://nationalparkservice.github.io/imd-ccal/reference/assign_detection_flags.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assign quality control flags to values less than or equal to the minimum level of quantification but greater than the MDL. — assign_detection_flags","text":"","code":"tidy_ccal_flagged <- read_ccal(use_example_data(file_names = \"SPAC_080199.xlsx\"))[[1]][[1]] %>%   remove_ccal_duplicates() %>%   assign_detection_flags() #> Reading data from /home/runner/work/_temp/Library/imdccal/extdata/SPAC_080199.x… #> Warning: ! Questionable results contain duplicate rows: #> ! See samples: 11: TDN, 13: TDN, and 3: TDN. #> ℹ This may be caused by lab error, or may be a result of one analyte being #>   compared to more than one other analyte. #> ℹ See the `questionable` table returned by this function."},{"path":"https://nationalparkservice.github.io/imd-ccal/reference/detection_limits.html","id":null,"dir":"Reference","previous_headings":"","what":"Detection Limits and Other Information On CCAL's Analytes — detection_limits","title":"Detection Limits and Other Information On CCAL's Analytes — detection_limits","text":"Metadata including detection limits various analytes measured CCAL used IMD.","code":""},{"path":"https://nationalparkservice.github.io/imd-ccal/reference/detection_limits.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detection Limits and Other Information On CCAL's Analytes — detection_limits","text":"","code":"detection_limits"},{"path":[]},{"path":"https://nationalparkservice.github.io/imd-ccal/reference/detection_limits.html","id":"detection-limits","dir":"Reference","previous_headings":"","what":"detection_limits","title":"Detection Limits and Other Information On CCAL's Analytes — detection_limits","text":"data frame 15 rows 11 columns: analysis description analyte found \"Analysis\" column https://ccal.oregonstate.edu/detection. analyte_code abbreviation analyte used CCAL deliverables. Characteristic_Name Characteristic_Name defined EQuIS https://doimspp.sharepoint.com/sites/nps-nrss-wrdiv/SitePages/DMEQuIS.aspx?xsdata=MDV8MDJ8fDE1NTcyM2EwNmEyODQ3NThhZDM5MDhkYzUzNDVjZjUwfDA2OTNiNWJhNGIxODRkN2I5MzQxZjMyZjQwMGE1NDk0fDB8MHw2Mzg0NzY4MDY0NzU3ODc1Nzd8VW5rbm93bnxWR1ZoYlhOVFpXTjFjbWwwZVZObGNuWnBZMlY4ZXlKV0lqb2lNQzR3TGpBd01EQWlMQ0pRSWpvaVYybHVNeklpTENKQlRpSTZJazkwYUdWeUlpd2lWMVFpT2pFeGZRPT18MXxMMk5vWVhSekx6RTVPbTFsWlhScGJtZGZUbXBuTVU5RWF6UlBWR2QwV21wck5FMXBNREJPZWtreVRGUm9iRTFxWjNSYVZFWnBUMFJWTTAxNmJHaFBSRUpxUUhSb2NtVmhaQzUyTWk5dFpYTnpZV2RsY3k4eE56RXlNRGd6T0RRMk1qVXd8MDU3NTdhODQyYWI2NDI5MGFkMzkwOGRjNTM0NWNmNTB8Yjg5ZDU1YmI3ZjVhNDNhNmJlODQwMzU5NDgyNTM1ZmM%3D&sdata=TjVsUVVHQS84VDQ2NUlRZmNzMlE3R2hRRWI0MDdlaVRIL0hkNnAxMmRSQT0%3D&ovuser=0693b5ba-4b18-4d7b-9341-f32f400a5494%2Cavolk%40nps.gov&=Teams-HL&CT=1719255259520&clickparams=eyJBcHBOYW1lIjoiVGVhbXMtRGVza3RvcCIsIkFwcFZlcnNpb24iOiI0OS8yNDA1MTYyMjIyMyIsIkhhc0ZlZGVyYXRlZFVzZXIiOmZhbHNlfQ%3D%3D Method_Speciation Method_Speciation defined EQuIS https://doimspp.sharepoint.com/sites/nps-nrss-wrdiv/SitePages/DMEQuIS.aspx?xsdata=MDV8MDJ8fDE1NTcyM2EwNmEyODQ3NThhZDM5MDhkYzUzNDVjZjUwfDA2OTNiNWJhNGIxODRkN2I5MzQxZjMyZjQwMGE1NDk0fDB8MHw2Mzg0NzY4MDY0NzU3ODc1Nzd8VW5rbm93bnxWR1ZoYlhOVFpXTjFjbWwwZVZObGNuWnBZMlY4ZXlKV0lqb2lNQzR3TGpBd01EQWlMQ0pRSWpvaVYybHVNeklpTENKQlRpSTZJazkwYUdWeUlpd2lWMVFpT2pFeGZRPT18MXxMMk5vWVhSekx6RTVPbTFsWlhScGJtZGZUbXBuTVU5RWF6UlBWR2QwV21wck5FMXBNREJPZWtreVRGUm9iRTFxWjNSYVZFWnBUMFJWTTAxNmJHaFBSRUpxUUhSb2NtVmhaQzUyTWk5dFpYTnpZV2RsY3k4eE56RXlNRGd6T0RRMk1qVXd8MDU3NTdhODQyYWI2NDI5MGFkMzkwOGRjNTM0NWNmNTB8Yjg5ZDU1YmI3ZjVhNDNhNmJlODQwMzU5NDgyNTM1ZmM%3D&sdata=TjVsUVVHQS84VDQ2NUlRZmNzMlE3R2hRRWI0MDdlaVRIL0hkNnAxMmRSQT0%3D&ovuser=0693b5ba-4b18-4d7b-9341-f32f400a5494%2Cavolk%40nps.gov&=Teams-HL&CT=1719255259520&clickparams=eyJBcHBOYW1lIjoiVGVhbXMtRGVza3RvcCIsIkFwcFZlcnNpb24iOiI0OS8yNDA1MTYyMjIyMyIsIkhhc0ZlZGVyYXRlZFVzZXIiOmZhbHNlfQ%3D%3D Filtered_Fraction Filtered_Fraction defined EQuIS https://doimspp.sharepoint.com/sites/nps-nrss-wrdiv/SitePages/DMEQuIS.aspx?xsdata=MDV8MDJ8fDE1NTcyM2EwNmEyODQ3NThhZDM5MDhkYzUzNDVjZjUwfDA2OTNiNWJhNGIxODRkN2I5MzQxZjMyZjQwMGE1NDk0fDB8MHw2Mzg0NzY4MDY0NzU3ODc1Nzd8VW5rbm93bnxWR1ZoYlhOVFpXTjFjbWwwZVZObGNuWnBZMlY4ZXlKV0lqb2lNQzR3TGpBd01EQWlMQ0pRSWpvaVYybHVNeklpTENKQlRpSTZJazkwYUdWeUlpd2lWMVFpT2pFeGZRPT18MXxMMk5vWVhSekx6RTVPbTFsWlhScGJtZGZUbXBuTVU5RWF6UlBWR2QwV21wck5FMXBNREJPZWtreVRGUm9iRTFxWjNSYVZFWnBUMFJWTTAxNmJHaFBSRUpxUUhSb2NtVmhaQzUyTWk5dFpYTnpZV2RsY3k4eE56RXlNRGd6T0RRMk1qVXd8MDU3NTdhODQyYWI2NDI5MGFkMzkwOGRjNTM0NWNmNTB8Yjg5ZDU1YmI3ZjVhNDNhNmJlODQwMzU5NDgyNTM1ZmM%3D&sdata=TjVsUVVHQS84VDQ2NUlRZmNzMlE3R2hRRWI0MDdlaVRIL0hkNnAxMmRSQT0%3D&ovuser=0693b5ba-4b18-4d7b-9341-f32f400a5494%2Cavolk%40nps.gov&=Teams-HL&CT=1719255259520&clickparams=eyJBcHBOYW1lIjoiVGVhbXMtRGVza3RvcCIsIkFwcFZlcnNpb24iOiI0OS8yNDA1MTYyMjIyMyIsIkhhc0ZlZGVyYXRlZFVzZXIiOmZhbHNlfQ%3D%3D Analytical_Method_ID Analytical_Method_ID defined EQuIS https://doimspp.sharepoint.com/sites/nps-nrss-wrdiv/SitePages/DMEQuIS.aspx?xsdata=MDV8MDJ8fDE1NTcyM2EwNmEyODQ3NThhZDM5MDhkYzUzNDVjZjUwfDA2OTNiNWJhNGIxODRkN2I5MzQxZjMyZjQwMGE1NDk0fDB8MHw2Mzg0NzY4MDY0NzU3ODc1Nzd8VW5rbm93bnxWR1ZoYlhOVFpXTjFjbWwwZVZObGNuWnBZMlY4ZXlKV0lqb2lNQzR3TGpBd01EQWlMQ0pRSWpvaVYybHVNeklpTENKQlRpSTZJazkwYUdWeUlpd2lWMVFpT2pFeGZRPT18MXxMMk5vWVhSekx6RTVPbTFsWlhScGJtZGZUbXBuTVU5RWF6UlBWR2QwV21wck5FMXBNREJPZWtreVRGUm9iRTFxWjNSYVZFWnBUMFJWTTAxNmJHaFBSRUpxUUhSb2NtVmhaQzUyTWk5dFpYTnpZV2RsY3k4eE56RXlNRGd6T0RRMk1qVXd8MDU3NTdhODQyYWI2NDI5MGFkMzkwOGRjNTM0NWNmNTB8Yjg5ZDU1YmI3ZjVhNDNhNmJlODQwMzU5NDgyNTM1ZmM%3D&sdata=TjVsUVVHQS84VDQ2NUlRZmNzMlE3R2hRRWI0MDdlaVRIL0hkNnAxMmRSQT0%3D&ovuser=0693b5ba-4b18-4d7b-9341-f32f400a5494%2Cavolk%40nps.gov&=Teams-HL&CT=1719255259520&clickparams=eyJBcHBOYW1lIjoiVGVhbXMtRGVza3RvcCIsIkFwcFZlcnNpb24iOiI0OS8yNDA1MTYyMjIyMyIsIkhhc0ZlZGVyYXRlZFVzZXIiOmZhbHNlfQ%3D%3D Result_Unit Result_Unit defined EQuIS https://doimspp.sharepoint.com/sites/nps-nrss-wrdiv/SitePages/DMEQuIS.aspx?xsdata=MDV8MDJ8fDE1NTcyM2EwNmEyODQ3NThhZDM5MDhkYzUzNDVjZjUwfDA2OTNiNWJhNGIxODRkN2I5MzQxZjMyZjQwMGE1NDk0fDB8MHw2Mzg0NzY4MDY0NzU3ODc1Nzd8VW5rbm93bnxWR1ZoYlhOVFpXTjFjbWwwZVZObGNuWnBZMlY4ZXlKV0lqb2lNQzR3TGpBd01EQWlMQ0pRSWpvaVYybHVNeklpTENKQlRpSTZJazkwYUdWeUlpd2lWMVFpT2pFeGZRPT18MXxMMk5vWVhSekx6RTVPbTFsWlhScGJtZGZUbXBuTVU5RWF6UlBWR2QwV21wck5FMXBNREJPZWtreVRGUm9iRTFxWjNSYVZFWnBUMFJWTTAxNmJHaFBSRUpxUUhSb2NtVmhaQzUyTWk5dFpYTnpZV2RsY3k4eE56RXlNRGd6T0RRMk1qVXd8MDU3NTdhODQyYWI2NDI5MGFkMzkwOGRjNTM0NWNmNTB8Yjg5ZDU1YmI3ZjVhNDNhNmJlODQwMzU5NDgyNTM1ZmM%3D&sdata=TjVsUVVHQS84VDQ2NUlRZmNzMlE3R2hRRWI0MDdlaVRIL0hkNnAxMmRSQT0%3D&ovuser=0693b5ba-4b18-4d7b-9341-f32f400a5494%2Cavolk%40nps.gov&=Teams-HL&CT=1719255259520&clickparams=eyJBcHBOYW1lIjoiVGVhbXMtRGVza3RvcCIsIkFwcFZlcnNpb24iOiI0OS8yNDA1MTYyMjIyMyIsIkhhc0ZlZGVyYXRlZFVzZXIiOmZhbHNlfQ%3D%3D Method_Detection_Limit Method_Detection_Limit defined EQuIS https://doimspp.sharepoint.com/sites/nps-nrss-wrdiv/SitePages/DMEQuIS.aspx?xsdata=MDV8MDJ8fDE1NTcyM2EwNmEyODQ3NThhZDM5MDhkYzUzNDVjZjUwfDA2OTNiNWJhNGIxODRkN2I5MzQxZjMyZjQwMGE1NDk0fDB8MHw2Mzg0NzY4MDY0NzU3ODc1Nzd8VW5rbm93bnxWR1ZoYlhOVFpXTjFjbWwwZVZObGNuWnBZMlY4ZXlKV0lqb2lNQzR3TGpBd01EQWlMQ0pRSWpvaVYybHVNeklpTENKQlRpSTZJazkwYUdWeUlpd2lWMVFpT2pFeGZRPT18MXxMMk5vWVhSekx6RTVPbTFsWlhScGJtZGZUbXBuTVU5RWF6UlBWR2QwV21wck5FMXBNREJPZWtreVRGUm9iRTFxWjNSYVZFWnBUMFJWTTAxNmJHaFBSRUpxUUhSb2NtVmhaQzUyTWk5dFpYTnpZV2RsY3k4eE56RXlNRGd6T0RRMk1qVXd8MDU3NTdhODQyYWI2NDI5MGFkMzkwOGRjNTM0NWNmNTB8Yjg5ZDU1YmI3ZjVhNDNhNmJlODQwMzU5NDgyNTM1ZmM%3D&sdata=TjVsUVVHQS84VDQ2NUlRZmNzMlE3R2hRRWI0MDdlaVRIL0hkNnAxMmRSQT0%3D&ovuser=0693b5ba-4b18-4d7b-9341-f32f400a5494%2Cavolk%40nps.gov&=Teams-HL&CT=1719255259520&clickparams=eyJBcHBOYW1lIjoiVGVhbXMtRGVza3RvcCIsIkFwcFZlcnNpb24iOiI0OS8yNDA1MTYyMjIyMyIsIkhhc0ZlZGVyYXRlZFVzZXIiOmZhbHNlfQ%3D%3D Lower_Quantification_Limit Lower_Quantification_Limit defined EQuIS https://doimspp.sharepoint.com/sites/nps-nrss-wrdiv/SitePages/DMEQuIS.aspx?xsdata=MDV8MDJ8fDE1NTcyM2EwNmEyODQ3NThhZDM5MDhkYzUzNDVjZjUwfDA2OTNiNWJhNGIxODRkN2I5MzQxZjMyZjQwMGE1NDk0fDB8MHw2Mzg0NzY4MDY0NzU3ODc1Nzd8VW5rbm93bnxWR1ZoYlhOVFpXTjFjbWwwZVZObGNuWnBZMlY4ZXlKV0lqb2lNQzR3TGpBd01EQWlMQ0pRSWpvaVYybHVNeklpTENKQlRpSTZJazkwYUdWeUlpd2lWMVFpT2pFeGZRPT18MXxMMk5vWVhSekx6RTVPbTFsWlhScGJtZGZUbXBuTVU5RWF6UlBWR2QwV21wck5FMXBNREJPZWtreVRGUm9iRTFxWjNSYVZFWnBUMFJWTTAxNmJHaFBSRUpxUUhSb2NtVmhaQzUyTWk5dFpYTnpZV2RsY3k4eE56RXlNRGd6T0RRMk1qVXd8MDU3NTdhODQyYWI2NDI5MGFkMzkwOGRjNTM0NWNmNTB8Yjg5ZDU1YmI3ZjVhNDNhNmJlODQwMzU5NDgyNTM1ZmM%3D&sdata=TjVsUVVHQS84VDQ2NUlRZmNzMlE3R2hRRWI0MDdlaVRIL0hkNnAxMmRSQT0%3D&ovuser=0693b5ba-4b18-4d7b-9341-f32f400a5494%2Cavolk%40nps.gov&=Teams-HL&CT=1719255259520&clickparams=eyJBcHBOYW1lIjoiVGVhbXMtRGVza3RvcCIsIkFwcFZlcnNpb24iOiI0OS8yNDA1MTYyMjIyMyIsIkhhc0ZlZGVyYXRlZFVzZXIiOmZhbHNlfQ%3D%3D StartDate confident detection limits given row valid date. EndDate confident detection limits given row valid date.","code":""},{"path":"https://nationalparkservice.github.io/imd-ccal/reference/equis_qualifiers.html","id":null,"dir":"Reference","previous_headings":"","what":"EQuIS Flags — equis_qualifiers","title":"EQuIS Flags — equis_qualifiers","text":"Definitions various flags allowed EQuIS.","code":""},{"path":"https://nationalparkservice.github.io/imd-ccal/reference/equis_qualifiers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"EQuIS Flags — equis_qualifiers","text":"","code":"equis_qualifiers"},{"path":[]},{"path":"https://nationalparkservice.github.io/imd-ccal/reference/equis_qualifiers.html","id":"equis-qualifiers","dir":"Reference","previous_headings":"","what":"equis_qualifiers","title":"EQuIS Flags — equis_qualifiers","text":"data frame 231 rows 2 columns: lookup_code flag raised represent given concern data. remark description meaning given flag.","code":""},{"path":"https://nationalparkservice.github.io/imd-ccal/reference/equis_qualifiers.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"EQuIS Flags — equis_qualifiers","text":"https://doimspp.sharepoint.com/:x:/r/sites/nps-nrss-wrdiv/_layouts/15/Doc.aspx?sourcedoc=%7B897FC8B3-2F68-4353-BB79-C0FEE9C45991%7D&file=NPS_EQuIS_WQX_Reference_Values.xlsx&action=default&mobileredirect=true","code":""},{"path":"https://nationalparkservice.github.io/imd-ccal/reference/format_equis_results.html","id":null,"dir":"Reference","previous_headings":"","what":"Create the results table of the EQuIS EDD. — format_equis_results","title":"Create the results table of the EQuIS EDD. — format_equis_results","text":"Create results table EQuIS EDD.","code":""},{"path":"https://nationalparkservice.github.io/imd-ccal/reference/format_equis_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create the results table of the EQuIS EDD. — format_equis_results","text":"","code":"format_equis_results(   file_paths,   limits = imdccal::detection_limits,   qualifiers = imdccal::equis_qualifiers,   concat = FALSE )"},{"path":"https://nationalparkservice.github.io/imd-ccal/reference/format_equis_results.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create the results table of the EQuIS EDD. — format_equis_results","text":"file_paths Path .xlsx file delivered CCAL. limits Table detection limits. default, uses version package. User-defined versions must columns. qualifiers Table flags meanings. default, uses version package. User-defined versions must columns. concat concat set TRUE, output contains one table rather one every input file. default, concat set FALSE, output contains separate tables file. one file path supplied file_paths argument, parameter affect output.","code":""},{"path":"https://nationalparkservice.github.io/imd-ccal/reference/format_equis_results.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create the results table of the EQuIS EDD. — format_equis_results","text":"data formatted input EQuIS system \"Results\" table. Note running function, user must still complete processing prepare data EQuIS. example, users must define Activity_ID, assign additional flags, modify Result_Status depending outcome quality control process.","code":""},{"path":"https://nationalparkservice.github.io/imd-ccal/reference/format_equis_results.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create the results table of the EQuIS EDD. — format_equis_results","text":"","code":"# Edit limits table to work with example data limits <- imdccal::detection_limits |>   dplyr::mutate(EndDate = dplyr::if_else(EndDate == \"2024-12-31\",                                          lubridate::ymd(\"2099-12-31\"),                                          EndDate))  # Create results table results <- format_equis_results(file_paths = use_example_data(file_names = \"SPAC_080199.xlsx\"),                           limits = limits) #> Reading data from /home/runner/work/_temp/Library/imdccal/extdata/SPAC_080199.x… #> Warning: ! Questionable results contain duplicate rows: #> ! See samples: 11: TDN, 13: TDN, and 3: TDN. #> ℹ This may be caused by lab error, or may be a result of one analyte being #>   compared to more than one other analyte. #> ℹ See the `questionable` table returned by this function."},{"path":"https://nationalparkservice.github.io/imd-ccal/reference/get_data_params.html","id":null,"dir":"Reference","previous_headings":"","what":"List every parameter that occurs in the data — get_data_params","title":"List every parameter that occurs in the data — get_data_params","text":"List every parameter occurs data","code":""},{"path":"https://nationalparkservice.github.io/imd-ccal/reference/get_data_params.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List every parameter that occurs in the data — get_data_params","text":"","code":"get_data_params(ccal_data)"},{"path":"https://nationalparkservice.github.io/imd-ccal/reference/get_data_params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List every parameter that occurs in the data — get_data_params","text":"ccal_data list object returned read_ccal","code":""},{"path":"https://nationalparkservice.github.io/imd-ccal/reference/get_data_params.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List every parameter that occurs in the data — get_data_params","text":"character vector parameter codes","code":""},{"path":"https://nationalparkservice.github.io/imd-ccal/reference/get_data_params.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List every parameter that occurs in the data — get_data_params","text":"","code":"my_folder <- \"ccal_results\" file_list <- list.files(my_folder, pattern = \"*.xlsx$\", full.names = TRUE) all_ccal_data <- read_ccal(file_list) parameters <- get_data_params(all_ccal_data)"},{"path":"https://nationalparkservice.github.io/imd-ccal/reference/get_questionable_params.html","id":null,"dir":"Reference","previous_headings":"","what":"List every parameter name that occurs in the questionable results — get_questionable_params","title":"List every parameter name that occurs in the questionable results — get_questionable_params","text":"List every parameter name occurs questionable results","code":""},{"path":"https://nationalparkservice.github.io/imd-ccal/reference/get_questionable_params.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List every parameter name that occurs in the questionable results — get_questionable_params","text":"","code":"get_questionable_params(ccal_data)"},{"path":"https://nationalparkservice.github.io/imd-ccal/reference/get_questionable_params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List every parameter name that occurs in the questionable results — get_questionable_params","text":"ccal_data list object returned read_ccal","code":""},{"path":"https://nationalparkservice.github.io/imd-ccal/reference/get_questionable_params.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List every parameter name that occurs in the questionable results — get_questionable_params","text":"character vector parameter names","code":""},{"path":"https://nationalparkservice.github.io/imd-ccal/reference/get_questionable_params.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List every parameter name that occurs in the questionable results — get_questionable_params","text":"","code":"my_folder <- \"ccal_results\" file_list <- list.files(my_folder, pattern = \"*.xlsx$\", full.names = TRUE) all_ccal_data <- read_ccal(file_list) param_names <- get_questionable_params(all_ccal_data)"},{"path":"https://nationalparkservice.github.io/imd-ccal/reference/imdccal-package.html","id":null,"dir":"Reference","previous_headings":"","what":"imdccal: Wrangle CCAL Data Into Machine Readable Format — imdccal-package","title":"imdccal: Wrangle CCAL Data Into Machine Readable Format — imdccal-package","text":"package takes water quality data spreadsheets (.xlsx) delivered CCAL lab reads R, including metadata provided. Data can exported machine readable CSV XLSX files can easily analyzed, imported database tables, added NPS data package publication. Also includes functionality format data Results table inclusion EQuIS EDD.","code":""},{"path":[]},{"path":"https://nationalparkservice.github.io/imd-ccal/reference/imdccal-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"imdccal: Wrangle CCAL Data Into Machine Readable Format — imdccal-package","text":"Maintainer: Sarah Wright sarah_wright@nps.gov (ORCID) Authors: Liam Smith lsmith@nps.gov (ORCID)","code":""},{"path":"https://nationalparkservice.github.io/imd-ccal/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://nationalparkservice.github.io/imd-ccal/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://nationalparkservice.github.io/imd-ccal/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://nationalparkservice.github.io/imd-ccal/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://nationalparkservice.github.io/imd-ccal/reference/range_to_vector.html","id":null,"dir":"Reference","previous_headings":"","what":"Expand Number Range in Text to All Numbers in Range — range_to_vector","title":"Expand Number Range in Text to All Numbers in Range — range_to_vector","text":"Takes character vector containing range numeric IDs (e.g. \"11 - 14\") replaces range numbers contained range (\"11 12 13 14\").","code":""},{"path":"https://nationalparkservice.github.io/imd-ccal/reference/range_to_vector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expand Number Range in Text to All Numbers in Range — range_to_vector","text":"","code":"range_to_vector(numbers, separator = \" \")"},{"path":"https://nationalparkservice.github.io/imd-ccal/reference/range_to_vector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expand Number Range in Text to All Numbers in Range — range_to_vector","text":"numbers Character vector containing number range indicated dash (e.g. \"123 - 456\"). Numbers outside range must separated whitespace (e.g. \"1 3 5-9\"). Number range can ascending descending contain negative numbers. \"-123 - 456\" valid input. non-numeric characters permitted, except whitespace dashes. separator Character string use separator numbers output.","code":""},{"path":"https://nationalparkservice.github.io/imd-ccal/reference/range_to_vector.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expand Number Range in Text to All Numbers in Range — range_to_vector","text":"character vector, number ranges removed replaced numbers range explicitly listed.","code":""},{"path":"https://nationalparkservice.github.io/imd-ccal/reference/range_to_vector.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Expand Number Range in Text to All Numbers in Range — range_to_vector","text":"work negative numbers.","code":""},{"path":"https://nationalparkservice.github.io/imd-ccal/reference/read_ccal.html","id":null,"dir":"Reference","previous_headings":"","what":"Read CCAL Data and convert to machine-readable format. — read_ccal","title":"Read CCAL Data and convert to machine-readable format. — read_ccal","text":"Read CCAL Data convert machine-readable format.","code":""},{"path":"https://nationalparkservice.github.io/imd-ccal/reference/read_ccal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read CCAL Data and convert to machine-readable format. — read_ccal","text":"","code":"read_ccal(files, concat = FALSE)"},{"path":"https://nationalparkservice.github.io/imd-ccal/reference/read_ccal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read CCAL Data and convert to machine-readable format. — read_ccal","text":"files Path .xlsx file delivered CCAL. Use character vector specify multiple files. concat concat set TRUE, output contains one table data, one metadata, one samples, one questionable, rather one table every input file. default, concat set FALSE, output contains separate tables file. one file path supplied files argument, parameter affect output.","code":""},{"path":"https://nationalparkservice.github.io/imd-ccal/reference/read_ccal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read CCAL Data and convert to machine-readable format. — read_ccal","text":"nested list. list item corresponds one input file contains data frames data metadata.","code":""},{"path":"https://nationalparkservice.github.io/imd-ccal/reference/read_ccal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read CCAL Data and convert to machine-readable format. — read_ccal","text":"","code":"tidy_ccal <- read_ccal(use_example_data(file_names = \"SPAC_080199.xlsx\")) #> Reading data from /home/runner/work/_temp/Library/imdccal/extdata/SPAC_080199.x… #> Warning: ! Questionable results contain duplicate rows: #> ! See samples: 11: TDN, 13: TDN, and 3: TDN. #> ℹ This may be caused by lab error, or may be a result of one analyte being #>   compared to more than one other analyte. #> ℹ See the `questionable` table returned by this function."},{"path":"https://nationalparkservice.github.io/imd-ccal/reference/read_write_ccal.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrangle CCAL data into a machine-readable format — read_write_ccal","title":"Wrangle CCAL data into a machine-readable format — read_write_ccal","text":"Takes data delivered CCAL, extracts , rewrites tabs xlsx file csv files folder.","code":""},{"path":"https://nationalparkservice.github.io/imd-ccal/reference/read_write_ccal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrangle CCAL data into a machine-readable format — read_write_ccal","text":"","code":"read_write_ccal(   files,   format = c(\"xlsx\", \"csv\"),   destination_folder = \"./\",   overwrite = FALSE,   concat = FALSE )"},{"path":"https://nationalparkservice.github.io/imd-ccal/reference/read_write_ccal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrangle CCAL data into a machine-readable format — read_write_ccal","text":"files Path .xlsx file delivered CCAL. Use character vector specify multiple files. format File format export machine readable data - either \"xlsx\" \"csv\" destination_folder Folder save data . Defaults current working directory. Folder must already exist. overwrite Overwrite existing file (Defaults TRUE write.table) concat concat set TRUE, function creates one file, rather one file every CCAL deliverable. default, concat set FALSE, function creates separate files every CCAL deliverable. one file path supplied files argument, parameter affect output.","code":""},{"path":"https://nationalparkservice.github.io/imd-ccal/reference/read_write_ccal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wrangle CCAL data into a machine-readable format — read_write_ccal","text":"Invisibly returns list containing data written file.","code":""},{"path":"https://nationalparkservice.github.io/imd-ccal/reference/read_write_ccal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Wrangle CCAL data into a machine-readable format — read_write_ccal","text":"","code":"if (FALSE) { # \\dontrun{ # Get file paths all_files <- use_example_data(file_names = use_example_data())  # Write to xlsx # Writes one file of tidied data per input file read_write_ccal(all_files, destination_folder = \"ccal_tidy\")  # Write to csv # Writes one folder of tidied CSV data per input file read_write_ccal(all_files, format = \"csv\", destination_folder = \"ccal_tidy\")  } # }"},{"path":"https://nationalparkservice.github.io/imd-ccal/reference/remove_ccal_duplicates.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove lab duplicates. — remove_ccal_duplicates","title":"Remove lab duplicates. — remove_ccal_duplicates","text":"Remove lab duplicates.","code":""},{"path":"https://nationalparkservice.github.io/imd-ccal/reference/remove_ccal_duplicates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove lab duplicates. — remove_ccal_duplicates","text":"","code":"remove_ccal_duplicates(data)"},{"path":"https://nationalparkservice.github.io/imd-ccal/reference/remove_ccal_duplicates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove lab duplicates. — remove_ccal_duplicates","text":"data \"data\" table produced read_ccal().","code":""},{"path":"https://nationalparkservice.github.io/imd-ccal/reference/remove_ccal_duplicates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove lab duplicates. — remove_ccal_duplicates","text":"data lab QC duplicates removed.","code":""},{"path":"https://nationalparkservice.github.io/imd-ccal/reference/remove_ccal_duplicates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove lab duplicates. — remove_ccal_duplicates","text":"","code":"tidy_ccal_no_dups <- read_ccal(use_example_data(file_names = \"SPAC_080199.xlsx\"))[[1]][[1]] %>%   remove_ccal_duplicates() #> Reading data from /home/runner/work/_temp/Library/imdccal/extdata/SPAC_080199.x… #> Warning: ! Questionable results contain duplicate rows: #> ! See samples: 11: TDN, 13: TDN, and 3: TDN. #> ℹ This may be caused by lab error, or may be a result of one analyte being #>   compared to more than one other analyte. #> ℹ See the `questionable` table returned by this function."},{"path":"https://nationalparkservice.github.io/imd-ccal/reference/use_example_data.html","id":null,"dir":"Reference","previous_headings":"","what":"List the file name(s) or file paths of imdccal's example data — use_example_data","title":"List the file name(s) or file paths of imdccal's example data — use_example_data","text":"List file name(s) file paths imdccal's example data","code":""},{"path":"https://nationalparkservice.github.io/imd-ccal/reference/use_example_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List the file name(s) or file paths of imdccal's example data — use_example_data","text":"","code":"use_example_data(file_names = NULL)"},{"path":"https://nationalparkservice.github.io/imd-ccal/reference/use_example_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List the file name(s) or file paths of imdccal's example data — use_example_data","text":"file_names Optional. File name requested example data. list available example data files, omit argument.","code":""},{"path":"https://nationalparkservice.github.io/imd-ccal/reference/use_example_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List the file name(s) or file paths of imdccal's example data — use_example_data","text":"file_names supplied, use_example_data() returns full file path requested package data. Otherwise, returns file names example data.","code":""},{"path":"https://nationalparkservice.github.io/imd-ccal/reference/use_example_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List the file name(s) or file paths of imdccal's example data — use_example_data","text":"","code":"# List all example data file names use_example_data() #> [1] \"SPAC_080199.xlsx\" \"SPAC_081599.xlsx\"  # Find file path to one example data file use_example_data(file_names = \"SPAC_080199.xlsx\") #> [1] \"/home/runner/work/_temp/Library/imdccal/extdata/SPAC_080199.xlsx\"  # Find file path to all example data files use_example_data(file_names = use_example_data()) #> [1] \"/home/runner/work/_temp/Library/imdccal/extdata/SPAC_080199.xlsx\" #> [2] \"/home/runner/work/_temp/Library/imdccal/extdata/SPAC_081599.xlsx\""},{"path":"https://nationalparkservice.github.io/imd-ccal/reference/write_ccal.html","id":null,"dir":"Reference","previous_headings":"","what":"Write data to xlsx or csv file. — write_ccal","title":"Write data to xlsx or csv file. — write_ccal","text":"Write data xlsx csv file.","code":""},{"path":"https://nationalparkservice.github.io/imd-ccal/reference/write_ccal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write data to xlsx or csv file. — write_ccal","text":"","code":"write_ccal(   all_data,   format = c(\"xlsx\", \"csv\"),   destination_folder,   overwrite,   suffix,   num_tables )"},{"path":"https://nationalparkservice.github.io/imd-ccal/reference/write_ccal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write data to xlsx or csv file. — write_ccal","text":"all_data data write file. format File format export machine readable data - either \"xlsx\" \"csv\" destination_folder Folder save data . Defaults current working directory. Folder must already exist. overwrite Overwrite existing file (Defaults TRUE write.table) suffix Suffix add output file name. num_tables Number tables write file.","code":""},{"path":"https://nationalparkservice.github.io/imd-ccal/reference/write_ccal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write data to xlsx or csv file. — write_ccal","text":"","code":"if (FALSE) { # \\dontrun{ # Create tidied CCAL data from demo data stored in the imdccal package tidy_ccal <- read_ccal(use_example_data(file_names = \"SPAC_080199.xlsx\"))  # Write data stored in environment to file write_ccal(all_data = tidy_ccal,           format = \"xlsx\", # alternatively, \"csv\"           destination_folder = \"ccal_tidy\", # must already exist           overwrite = TRUE,           suffix = \"_tidy\",           num_tables = 4) } # }"},{"path":"https://nationalparkservice.github.io/imd-ccal/reference/write_equis_results.html","id":null,"dir":"Reference","previous_headings":"","what":"Write the results table of the EQuIS EDD. — write_equis_results","title":"Write the results table of the EQuIS EDD. — write_equis_results","text":"Write results table EQuIS EDD.","code":""},{"path":"https://nationalparkservice.github.io/imd-ccal/reference/write_equis_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write the results table of the EQuIS EDD. — write_equis_results","text":"","code":"write_equis_results(   files,   limits = imdccal::detection_limits,   qualifiers = imdccal::equis_qualifiers,   format = c(\"xlsx\", \"csv\"),   destination_folder = \"./\",   overwrite = FALSE,   concat = FALSE )"},{"path":"https://nationalparkservice.github.io/imd-ccal/reference/write_equis_results.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write the results table of the EQuIS EDD. — write_equis_results","text":"files Path .xlsx file delivered CCAL. Use character vector specify multiple files. limits Table detection limits. default, uses version package. User-defined versions must columns. qualifiers Table flags meanings. default, uses version package. User-defined versions must columns. format File format export machine readable data - either \"xlsx\" \"csv\" destination_folder Folder save data . Defaults current working directory. Folder must already exist. overwrite Overwrite existing file (Defaults TRUE write.table) concat concat set TRUE, function creates one file rather one every CCAL deliverable. default, concat set FALSE, output contains separate files CCAL deliverable. one file path supplied files argument, parameter affect output.","code":""},{"path":"https://nationalparkservice.github.io/imd-ccal/reference/write_equis_results.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write the results table of the EQuIS EDD. — write_equis_results","text":"Invisibly returns list containing data written file.","code":""},{"path":"https://nationalparkservice.github.io/imd-ccal/reference/write_equis_results.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write the results table of the EQuIS EDD. — write_equis_results","text":"","code":"if (FALSE) { # \\dontrun{ # Edit limits table to work with example data limits <- imdccal::detection_limits |>   dplyr::mutate(EndDate = dplyr::if_else(EndDate == \"2024-12-31\",                                          lubridate::ymd(\"2099-12-31\"),                                          EndDate))  # Get file paths all_files <- use_example_data(file_names = use_example_data())  # Write to xlsx write_equis_results(files = all_files,               limits = limits,               destination_folder = \"ccal_tidy\",               overwrite = TRUE)  # Write one file of tidied data per input file  # Write to csv write_equis_results(files = all_files,               limits = limits,               format = \"csv\",               destination_folder = \"ccal_tidy\",               overwrite = TRUE)  # Write one folder of tidied CSV data per input file } # }"}]
